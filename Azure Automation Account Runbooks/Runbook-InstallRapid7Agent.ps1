$connectionName = "AzureRunAsConnection"
$servicePrincipalConnection = Get-AutomationConnection -Name $connectionName
$logonAttempt = 0
$logonResult = $False
while(!($connectionResult) -And ($logonAttempt -le 10))
{
    $LogonAttempt++
    #Logging in to Azure...
    $connectionResult = Connect-AzAccount `
                           -ServicePrincipal `
                           -Tenant $servicePrincipalConnection.TenantId `
                           -ApplicationId $servicePrincipalConnection.ApplicationId `
                           -CertificateThumbprint $servicePrincipalConnection.CertificateThumbprint
    Start-Sleep -Seconds 30
}
#### Need to make the below come from central location/repository
#$rapid7linuxzip = "\\location\azure_config.zip"
#$binary = Get-Content -Path $rapid7linuxzip -Encoding Byte
#$base64 = [Convert]::ToBase64String($binary)
$base64 = ''

$params = @{"configzip" = $base64}

### Target Running Machines
$AllVM = Get-AZVM -Status
$RunningVM = $AllVM | ?{$($_.PowerState -match "running")}


foreach ($vm in $RunningVM) {
    
    #see if insight agent installed.
    Write-Output "Inspecting if Rapid7 Extension installed on $($vm.Name)"
    $InsightAgentInstall = Get-AzVMExtension -ResourceGroupName $vm.resourcegroupname -VMName $vm.Name | ?{$_.Name -like "InsightAgent*"}
    

    if ($Null -eq $InsightAgentInstall) {    
        try{
            #check what OS is installed
            if ($vm.StorageProfile.osDisk.OsType -match "Windows"){
                $InstallName = "InsightAgentWindows"
            }
            elseif ($vm.StorageProfile.osDisk.OsType -match "Linux"){
                $InstallName = "InsightAgentLinux"
            }
            else {
                Write-Output "$($vm.Name) does not currently have a support Rapid 7 Agent Install"
                exit
            }
            
            Write-Output "Installing Rapid7 Extension on $($vm.Name)"
            Set-AzVMExtension `
                -VMName $vm.Name `
                -ResourceGroupName $vm.resourcegroupname `
                -Name $InstallName `
                -Publisher "Rapid7.InsightPlatform" `
                -ExtensionType $InstallName `
                -TypeHandlerVersion 2.0 `
                -Location $vm.location `
                -ProtectedSettings $params
        }
        catch{
            throw "This action failed $($_.exception)"
        }
    }
    else {
        #It's installed, don't do anything
        Write-Output "Skipping $($vm.Name) - Rapid7 Extension already installed"
    }     
}